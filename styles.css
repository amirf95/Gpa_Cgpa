html, body {
  overflow-y: auto; /* scroll */
    overflow-x: hidden; 
}



/*  css for the switch animation */ 
.theme-checkbox {
  --toggle-size: 16px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  width: 5em;
  height: 2.5em;
  background: -webkit-gradient(linear, left top, right top, color-stop(50%, #efefef), color-stop(50%, #ba2d9e)) no-repeat;
  background: -o-linear-gradient(left, #a262e7 50%, #c387e3 50%) no-repeat;
  background: linear-gradient(to right, #a262e7 50%, #c387e3 50%) no-repeat;
  background-size: 205%;
  background-position: 0;
  -webkit-transition: 0.4s;
  -o-transition: 0.4s;
  transition: 0.4s;
  border-radius: 99em;
  position: relative;
  cursor: pointer;
  font-size: var(--toggle-size);
}

.theme-checkbox::before {
  content: "";
  width: 1.75em;
  height: 1.75em;
  position: absolute;
  top: 0.438em;
  left: 0.438em;
  background: -webkit-gradient(linear, left top, right top, color-stop(50%, #efefef), color-stop(50%, #2a2a2a)) no-repeat;
  background: -o-linear-gradient(left, #ba2d9e 50%, #ba2d9e 50%) no-repeat;
  background: linear-gradient(to right, #ba2d9e 50%, #822eae 50%) no-repeat;
  background-size: 205%;
  background-position: 100%;
  border-radius: 50%;
  -webkit-transition: 0.4s;
  -o-transition: 0.4s;
  transition: 0.4s;
}

.theme-checkbox:checked::before {
  left: calc(100% - 1.75em - 0.438em);
  background-position: 0;
}

.theme-checkbox:checked {
  background-position: 100%;
}
/*css for the switch animation*/

/* css for switch positioning */
.checkbox_container{
  position: relative;
  margin: 30px auto;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
  color: white;
  
}
/* css for switch positioning */

/* css for the switch text */
.switch-label {
  font-size: 1em;
  color: #fff;
  transition: opacity 0.4s ease;
  font-family: "Vibur";
  white-space: nowrap;
}
.label-left {
  opacity: 1;
  order: 1;
}
.theme-checkbox{
  order: 2;
}
.label-right {
  opacity: 0;
  order: 3;
  
}
/* When switch is checked, toggle label visibility */
.theme-checkbox:checked ~ .label-left {
  opacity: 0!important;
}

.theme-checkbox:checked ~ .label-right {
  opacity: 1;
}
/* css for the switch text */
.neonText1 {
  color: #e87cdb;
  text-shadow:
      0 0 7px #c387e3,
      0 0 10px #c387e3,
      0 0 21px #c387e3,
      0 0 42px #ba2d9e,
      0 0 82px #ba2d9e,
      0 0 92px #ba2d9e,
      0 0 102px #ba2d9e,
      0 0 151px #ba2d9e;
}
.neonText2 {
  color: #a262e7;
  text-shadow:
      0 0 7px #e3ccef,
      0 0 10px #d5bde2,
      0 0 21px #c387e3,
      0 0 42px #967a90,
      0 0 82px #b946a2,
      0 0 92px #ba2d9e,
      0 0 102px #ba2d9e,
      0 0 151px #ba2d9e;
}
/* css for the title neon text */
.neonText{
  position: relative;
  z-index: 10;
  text-align: center;
  margin-top: 40px;
  
  color: #794a83;
  text-shadow:
      0 0 7px #824790,
      0 0 10px #a1539d,
      0 0 21px #5685c6,
      0 0 42px rgb(14, 6, 22),
      0 0 82px rgb(10, 30, 23),
      0 0 92px rgb(190, 18, 213),
      0 0 102px rgb(216, 52, 231),
      0 0 151px rgb(168, 18, 179);
}
h1{
  font-family: "Vibur";
  font-size: 3em;
  color: #fff;
  text-align: center;
  margin-top: 20px;
}
h2,p{
  font-family: 'Lucida Handwriting', cursive, cursive;
}

td span {
  display: inline-block;
  width: 100%;
  text-align: center;
  padding: 8px;
  color: white;
}
.container{
   margin-top: 120px;
  padding: 20px;
  display: flex;
  flex-direction: column;  /* Stack vertically */
  align-items: center;     /* Center horizontally */
  color: #fff;
  width: 100%;
}
form,.cgpa-form,.gpa-form {
  display: flex;
  flex-direction: column;
  gap: 10px;
  align-items: left;
  justify-content: left;
  color: #fff;
  padding: 20px;
  max-width: 100%;
  margin: 0 auto;
  z-index: 10;
}

/* css for the table */
@import url('https://unpkg.com/normalize.css') layer(normalize);

@layer normalize, base, demo;

@layer demo {
  :root {
    --accent: hsl(292, 74%, 49%);
    --border: color-mix(in oklch, canvas, canvasText 15%);
    --background: color-mix(in oklch, canvas, canvasText 2%);
    --head: light-dark(hsl(0 0% 98%), canvas);
    --selected: color-mix(in oklch, var(--accent), canvas 85%);
    --color: color-mix(in hsl, canvasText, #0000 50%);
    --hover-background: light-dark(hsl(0 0% 92%), hsl(0 0% 10%));
    --sibling-hover: red;
    --hover-color: green;
  }
  .members {
    background: light-dark(#fff, #000);
    overflow: auto;
    border: 1px solid var(--border);
    border-radius: 6px;
    width: 100%;
    max-width: 90vw;
    overflow-x: auto;
  }
  table {
    font-size: 0.875rem;
    border-collapse: collapse;
    background: #0000;
    color: var(--color);
    table-layout: fixed;
    width: auto;
    max-width: 90vw;
    border: 1px solid var(--border);
    border-radius: 6px;
    table-layout: fixed;
    overflow-x: hidden;;
  }
  input {
    color: var(--color);
  }
  table:focus-within tbody tr:not(:focus-within) {
    filter: blur(4px) saturate(0.2);
    pointer-events: none;
    opacity: 0.5;
  }
  tr:focus-within {
    background: var(--selected);
    td,
    input {
      color: canvasText;
    }
  }
  thead {
    background: var(--head);
  }
  th,
  td:first-of-type {
    padding: 0.25rem 1rem;
  }
  :is(td, th) {
    height: 40px;
  }
  td {
    font-weight: 300;
  }
  tr {
    transition-property: filter, background, opacity;
    transition-duration: 0.2s;
    transition-timing-function: ease-out;

    &:not(:last-of-type) {
      border-bottom: 1px solid var(--head);
    }
  }
  th, td {
  max-width: 200px;     /* Prevents any one cell from growing too wide */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
  table :is(td, th) {
    white-space: nowrap;
    font-weight: 400;
    font-size: 0.875rem;
  }
  table th {
    text-align: left;
    font-weight: 500;
    color: color-mix(in hsl, canvasText, #0000 35%);
  }
  thead {
    background: var(--head);
  }

  td:not(:has(input)) {
    padding: 0.5rem 1rem;
  }

  tr:focus-within input:hover:not(:focus-visible) {
    background: color-mix(in oklch, var(--accent), #0000 75%);
  }

  table input {
    font-size: inherit;
    height: 40px;
    font-weight: inherit;
    border: 0;
    padding: 0.5rem 1rem;
    height: 100%;
    background: #0000;
    border-radius: 0;
    caret-color: var(--accent);
    transition: color 0.26s ease-out;

    &:hover:not(:focus-visible) {
      background: var(--hover-background);
    }
    &::selection {
      background: var(--accent);
      color: white;
    }
    &:focus-visible {
      background: light-dark(#fff, #000);
      outline: 2px solid var(--accent);
    }
  }

  input:not(:focus, :focus-visible) {
    cursor: pointer;
  }
  table img {
    border-radius: 50%;
    width: 24px;
    aspect-ratio: 1;
  }
}

select.sgrade {
  max-width: 120px;
  width: 100%;
}

@layer base {
  :root {
    --font-size-min: 16;
    --font-size-max: 20;
    --font-ratio-min: 1.2;
    --font-ratio-max: 1.33;
    --font-width-min: 375;
    --font-width-max: 1500;
  }

  html {
    color-scheme: light dark;
  }

  [data-theme='light'] {
    color-scheme: light only;
  }

  [data-theme='dark'] {
    color-scheme: dark only;
  }

  :where(.fluid) {
    --fluid-min: calc(
      var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
    );
    --fluid-max: calc(
      var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
    );
    --fluid-preferred: calc(
      (var(--fluid-max) - var(--fluid-min)) /
        (var(--font-width-max) - var(--font-width-min))
    );
    --fluid-type: clamp(
      (var(--fluid-min) / 16) * 1rem,
      ((var(--fluid-min) / 16) * 1rem) -
        (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
        (var(--fluid-preferred) * var(--variable-unit, 100vi)),
      (var(--fluid-max) / 16) * 1rem
    );
    font-size: var(--fluid-type);
  }

  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  body {
    background: light-dark(#fff, #000);
    display: grid;
    place-items: center;
    min-height: 100vh;
    font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
      Helvetica, Arial, sans-serif, system-ui;
  }

  body::before {
    --size: 45px;
    --line: color-mix(in hsl, canvasText, transparent 80%);
    content: '';
    height: 100vh;
    width: 100vw;
    position: fixed;
    background: linear-gradient(
          90deg,
          var(--line) 1px,
          transparent 1px var(--size)
        )
        calc(var(--size) * 0.36) 50% / var(--size) var(--size),
      linear-gradient(var(--line) 1px, transparent 1px var(--size)) 0%
        calc(var(--size) * 0.32) / var(--size) var(--size);
    mask: linear-gradient(-20deg, transparent 50%, white);
    top: 0;
    transform-style: flat;
    pointer-events: none;
    z-index: -1;
  }

  .bear-link {
    color: canvasText;
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: 48px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    opacity: 0.8;
  }

  :where(.x-link, .bear-link):is(:hover, :focus-visible) {
    opacity: 1;
  }

  .bear-link svg {
    width: 75%;
  }

  /* Utilities */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
}


/* css for the table */
/*submit button css*/
button[type="submit"] {
  background-color: #822eae;
  color: white;
  padding: 12px 24px;
  border: none;
  border-radius: 8px;
  font-size: 1em;
  cursor: pointer;
  transition: background-color 0.3s ease;
  box-shadow: 0 0 8px #c387e3;
}

button[type="submit"]:hover {
  background-color: #a262e7;
  box-shadow: 0 0 12px #ba2d9e;
}
/*submit button css*/